/*
Mayanode API

Mayanode REST API.

Contact: devs@mayachain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Mayaname struct for Mayaname
type Mayaname struct {
	Name *string `json:"name,omitempty"`
	ExpireBlockHeight *int64 `json:"expire_block_height,omitempty"`
	Owner *string `json:"owner,omitempty"`
	PreferredAsset string `json:"preferred_asset"`
	// Amount of CACAO currently required to swap to preferred asset (this is variable based on outbound fee of the asset).
	PreferredAssetSwapThresholdCacao *string `json:"preferred_asset_swap_threshold_cacao,omitempty"`
	// Amount of CACAO currently accrued by this mayaname in affiliate fees waiting to be swapped to preferred asset.
	AffiliateCollectorCacao *string `json:"affiliate_collector_cacao,omitempty"`
	Aliases []MayanameAlias `json:"aliases"`
	// Affiliate basis points for calculating affiliate fees, which are applied as the default basis points when the MAYAName is listed as an affiliate in swap memo.
	AffiliateBps *int64 `json:"affiliate_bps,omitempty"`
	// List of subaffiliates and the corresponding affiliate basis points. If a MAYAName is specified as an affiliate in a swap memo, the shares of the affiliate fee are distributed among the listed subaffiliates based on the basis points assigned to each subaffiliate.
	Subaffiliates []MayanameSubaffiliate `json:"subaffiliates,omitempty"`
}

// NewMayaname instantiates a new Mayaname object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMayaname(preferredAsset string, aliases []MayanameAlias) *Mayaname {
	this := Mayaname{}
	this.PreferredAsset = preferredAsset
	this.Aliases = aliases
	return &this
}

// NewMayanameWithDefaults instantiates a new Mayaname object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMayanameWithDefaults() *Mayaname {
	this := Mayaname{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Mayaname) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Mayaname) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Mayaname) SetName(v string) {
	o.Name = &v
}

// GetExpireBlockHeight returns the ExpireBlockHeight field value if set, zero value otherwise.
func (o *Mayaname) GetExpireBlockHeight() int64 {
	if o == nil || o.ExpireBlockHeight == nil {
		var ret int64
		return ret
	}
	return *o.ExpireBlockHeight
}

// GetExpireBlockHeightOk returns a tuple with the ExpireBlockHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetExpireBlockHeightOk() (*int64, bool) {
	if o == nil || o.ExpireBlockHeight == nil {
		return nil, false
	}
	return o.ExpireBlockHeight, true
}

// HasExpireBlockHeight returns a boolean if a field has been set.
func (o *Mayaname) HasExpireBlockHeight() bool {
	if o != nil && o.ExpireBlockHeight != nil {
		return true
	}

	return false
}

// SetExpireBlockHeight gets a reference to the given int64 and assigns it to the ExpireBlockHeight field.
func (o *Mayaname) SetExpireBlockHeight(v int64) {
	o.ExpireBlockHeight = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Mayaname) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Mayaname) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *Mayaname) SetOwner(v string) {
	o.Owner = &v
}

// GetPreferredAsset returns the PreferredAsset field value
func (o *Mayaname) GetPreferredAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredAsset
}

// GetPreferredAssetOk returns a tuple with the PreferredAsset field value
// and a boolean to check if the value has been set.
func (o *Mayaname) GetPreferredAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredAsset, true
}

// SetPreferredAsset sets field value
func (o *Mayaname) SetPreferredAsset(v string) {
	o.PreferredAsset = v
}

// GetPreferredAssetSwapThresholdCacao returns the PreferredAssetSwapThresholdCacao field value if set, zero value otherwise.
func (o *Mayaname) GetPreferredAssetSwapThresholdCacao() string {
	if o == nil || o.PreferredAssetSwapThresholdCacao == nil {
		var ret string
		return ret
	}
	return *o.PreferredAssetSwapThresholdCacao
}

// GetPreferredAssetSwapThresholdCacaoOk returns a tuple with the PreferredAssetSwapThresholdCacao field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetPreferredAssetSwapThresholdCacaoOk() (*string, bool) {
	if o == nil || o.PreferredAssetSwapThresholdCacao == nil {
		return nil, false
	}
	return o.PreferredAssetSwapThresholdCacao, true
}

// HasPreferredAssetSwapThresholdCacao returns a boolean if a field has been set.
func (o *Mayaname) HasPreferredAssetSwapThresholdCacao() bool {
	if o != nil && o.PreferredAssetSwapThresholdCacao != nil {
		return true
	}

	return false
}

// SetPreferredAssetSwapThresholdCacao gets a reference to the given string and assigns it to the PreferredAssetSwapThresholdCacao field.
func (o *Mayaname) SetPreferredAssetSwapThresholdCacao(v string) {
	o.PreferredAssetSwapThresholdCacao = &v
}

// GetAffiliateCollectorCacao returns the AffiliateCollectorCacao field value if set, zero value otherwise.
func (o *Mayaname) GetAffiliateCollectorCacao() string {
	if o == nil || o.AffiliateCollectorCacao == nil {
		var ret string
		return ret
	}
	return *o.AffiliateCollectorCacao
}

// GetAffiliateCollectorCacaoOk returns a tuple with the AffiliateCollectorCacao field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetAffiliateCollectorCacaoOk() (*string, bool) {
	if o == nil || o.AffiliateCollectorCacao == nil {
		return nil, false
	}
	return o.AffiliateCollectorCacao, true
}

// HasAffiliateCollectorCacao returns a boolean if a field has been set.
func (o *Mayaname) HasAffiliateCollectorCacao() bool {
	if o != nil && o.AffiliateCollectorCacao != nil {
		return true
	}

	return false
}

// SetAffiliateCollectorCacao gets a reference to the given string and assigns it to the AffiliateCollectorCacao field.
func (o *Mayaname) SetAffiliateCollectorCacao(v string) {
	o.AffiliateCollectorCacao = &v
}

// GetAliases returns the Aliases field value
func (o *Mayaname) GetAliases() []MayanameAlias {
	if o == nil {
		var ret []MayanameAlias
		return ret
	}

	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value
// and a boolean to check if the value has been set.
func (o *Mayaname) GetAliasesOk() ([]MayanameAlias, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aliases, true
}

// SetAliases sets field value
func (o *Mayaname) SetAliases(v []MayanameAlias) {
	o.Aliases = v
}

// GetAffiliateBps returns the AffiliateBps field value if set, zero value otherwise.
func (o *Mayaname) GetAffiliateBps() int64 {
	if o == nil || o.AffiliateBps == nil {
		var ret int64
		return ret
	}
	return *o.AffiliateBps
}

// GetAffiliateBpsOk returns a tuple with the AffiliateBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetAffiliateBpsOk() (*int64, bool) {
	if o == nil || o.AffiliateBps == nil {
		return nil, false
	}
	return o.AffiliateBps, true
}

// HasAffiliateBps returns a boolean if a field has been set.
func (o *Mayaname) HasAffiliateBps() bool {
	if o != nil && o.AffiliateBps != nil {
		return true
	}

	return false
}

// SetAffiliateBps gets a reference to the given int64 and assigns it to the AffiliateBps field.
func (o *Mayaname) SetAffiliateBps(v int64) {
	o.AffiliateBps = &v
}

// GetSubaffiliates returns the Subaffiliates field value if set, zero value otherwise.
func (o *Mayaname) GetSubaffiliates() []MayanameSubaffiliate {
	if o == nil || o.Subaffiliates == nil {
		var ret []MayanameSubaffiliate
		return ret
	}
	return o.Subaffiliates
}

// GetSubaffiliatesOk returns a tuple with the Subaffiliates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Mayaname) GetSubaffiliatesOk() ([]MayanameSubaffiliate, bool) {
	if o == nil || o.Subaffiliates == nil {
		return nil, false
	}
	return o.Subaffiliates, true
}

// HasSubaffiliates returns a boolean if a field has been set.
func (o *Mayaname) HasSubaffiliates() bool {
	if o != nil && o.Subaffiliates != nil {
		return true
	}

	return false
}

// SetSubaffiliates gets a reference to the given []MayanameSubaffiliate and assigns it to the Subaffiliates field.
func (o *Mayaname) SetSubaffiliates(v []MayanameSubaffiliate) {
	o.Subaffiliates = v
}

func (o Mayaname) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ExpireBlockHeight != nil {
		toSerialize["expire_block_height"] = o.ExpireBlockHeight
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["preferred_asset"] = o.PreferredAsset
	}
	if o.PreferredAssetSwapThresholdCacao != nil {
		toSerialize["preferred_asset_swap_threshold_cacao"] = o.PreferredAssetSwapThresholdCacao
	}
	if o.AffiliateCollectorCacao != nil {
		toSerialize["affiliate_collector_cacao"] = o.AffiliateCollectorCacao
	}
	if true {
		toSerialize["aliases"] = o.Aliases
	}
	if o.AffiliateBps != nil {
		toSerialize["affiliate_bps"] = o.AffiliateBps
	}
	if o.Subaffiliates != nil {
		toSerialize["subaffiliates"] = o.Subaffiliates
	}
	return json.Marshal(toSerialize)
}

type NullableMayaname struct {
	value *Mayaname
	isSet bool
}

func (v NullableMayaname) Get() *Mayaname {
	return v.value
}

func (v *NullableMayaname) Set(val *Mayaname) {
	v.value = val
	v.isSet = true
}

func (v NullableMayaname) IsSet() bool {
	return v.isSet
}

func (v *NullableMayaname) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMayaname(val *Mayaname) *NullableMayaname {
	return &NullableMayaname{value: val, isSet: true}
}

func (v NullableMayaname) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMayaname) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


