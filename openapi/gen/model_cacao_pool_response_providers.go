/*
Mayanode API

Mayanode REST API.

Contact: devs@mayachain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CACAOPoolResponseProviders struct for CACAOPoolResponseProviders
type CACAOPoolResponseProviders struct {
	// the units of CACAOPool owned by providers (including pending)
	Units string `json:"units"`
	// the units of CACAOPool owned by providers that remain pending
	PendingUnits string `json:"pending_units"`
	// the amount of CACAO pending
	PendingCacao string `json:"pending_cacao"`
	// the value of the provider share of the CACAOPool (includes pending CACAO)
	Value string `json:"value"`
	// the profit and loss of the provider share of the CACAOPool
	Pnl string `json:"pnl"`
	// the current CACAO deposited by providers
	CurrentDeposit string `json:"current_deposit"`
}

// NewCACAOPoolResponseProviders instantiates a new CACAOPoolResponseProviders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCACAOPoolResponseProviders(units string, pendingUnits string, pendingCacao string, value string, pnl string, currentDeposit string) *CACAOPoolResponseProviders {
	this := CACAOPoolResponseProviders{}
	this.Units = units
	this.PendingUnits = pendingUnits
	this.PendingCacao = pendingCacao
	this.Value = value
	this.Pnl = pnl
	this.CurrentDeposit = currentDeposit
	return &this
}

// NewCACAOPoolResponseProvidersWithDefaults instantiates a new CACAOPoolResponseProviders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCACAOPoolResponseProvidersWithDefaults() *CACAOPoolResponseProviders {
	this := CACAOPoolResponseProviders{}
	return &this
}

// GetUnits returns the Units field value
func (o *CACAOPoolResponseProviders) GetUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Units, true
}

// SetUnits sets field value
func (o *CACAOPoolResponseProviders) SetUnits(v string) {
	o.Units = v
}

// GetPendingUnits returns the PendingUnits field value
func (o *CACAOPoolResponseProviders) GetPendingUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingUnits
}

// GetPendingUnitsOk returns a tuple with the PendingUnits field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetPendingUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingUnits, true
}

// SetPendingUnits sets field value
func (o *CACAOPoolResponseProviders) SetPendingUnits(v string) {
	o.PendingUnits = v
}

// GetPendingCacao returns the PendingCacao field value
func (o *CACAOPoolResponseProviders) GetPendingCacao() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingCacao
}

// GetPendingCacaoOk returns a tuple with the PendingCacao field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetPendingCacaoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingCacao, true
}

// SetPendingCacao sets field value
func (o *CACAOPoolResponseProviders) SetPendingCacao(v string) {
	o.PendingCacao = v
}

// GetValue returns the Value field value
func (o *CACAOPoolResponseProviders) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CACAOPoolResponseProviders) SetValue(v string) {
	o.Value = v
}

// GetPnl returns the Pnl field value
func (o *CACAOPoolResponseProviders) GetPnl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pnl
}

// GetPnlOk returns a tuple with the Pnl field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetPnlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pnl, true
}

// SetPnl sets field value
func (o *CACAOPoolResponseProviders) SetPnl(v string) {
	o.Pnl = v
}

// GetCurrentDeposit returns the CurrentDeposit field value
func (o *CACAOPoolResponseProviders) GetCurrentDeposit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentDeposit
}

// GetCurrentDepositOk returns a tuple with the CurrentDeposit field value
// and a boolean to check if the value has been set.
func (o *CACAOPoolResponseProviders) GetCurrentDepositOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentDeposit, true
}

// SetCurrentDeposit sets field value
func (o *CACAOPoolResponseProviders) SetCurrentDeposit(v string) {
	o.CurrentDeposit = v
}

func (o CACAOPoolResponseProviders) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["units"] = o.Units
	}
	if true {
		toSerialize["pending_units"] = o.PendingUnits
	}
	if true {
		toSerialize["pending_cacao"] = o.PendingCacao
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["pnl"] = o.Pnl
	}
	if true {
		toSerialize["current_deposit"] = o.CurrentDeposit
	}
	return json.Marshal(toSerialize)
}

type NullableCACAOPoolResponseProviders struct {
	value *CACAOPoolResponseProviders
	isSet bool
}

func (v NullableCACAOPoolResponseProviders) Get() *CACAOPoolResponseProviders {
	return v.value
}

func (v *NullableCACAOPoolResponseProviders) Set(val *CACAOPoolResponseProviders) {
	v.value = val
	v.isSet = true
}

func (v NullableCACAOPoolResponseProviders) IsSet() bool {
	return v.isSet
}

func (v *NullableCACAOPoolResponseProviders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCACAOPoolResponseProviders(val *CACAOPoolResponseProviders) *NullableCACAOPoolResponseProviders {
	return &NullableCACAOPoolResponseProviders{value: val, isSet: true}
}

func (v NullableCACAOPoolResponseProviders) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCACAOPoolResponseProviders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


