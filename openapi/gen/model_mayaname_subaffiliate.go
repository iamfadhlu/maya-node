/*
Mayanode API

Mayanode REST API.

Contact: devs@mayachain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MayanameSubaffiliate struct for MayanameSubaffiliate
type MayanameSubaffiliate struct {
	Name *string `json:"name,omitempty"`
	Bps *int64 `json:"bps,omitempty"`
}

// NewMayanameSubaffiliate instantiates a new MayanameSubaffiliate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMayanameSubaffiliate() *MayanameSubaffiliate {
	this := MayanameSubaffiliate{}
	return &this
}

// NewMayanameSubaffiliateWithDefaults instantiates a new MayanameSubaffiliate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMayanameSubaffiliateWithDefaults() *MayanameSubaffiliate {
	this := MayanameSubaffiliate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MayanameSubaffiliate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MayanameSubaffiliate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MayanameSubaffiliate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MayanameSubaffiliate) SetName(v string) {
	o.Name = &v
}

// GetBps returns the Bps field value if set, zero value otherwise.
func (o *MayanameSubaffiliate) GetBps() int64 {
	if o == nil || o.Bps == nil {
		var ret int64
		return ret
	}
	return *o.Bps
}

// GetBpsOk returns a tuple with the Bps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MayanameSubaffiliate) GetBpsOk() (*int64, bool) {
	if o == nil || o.Bps == nil {
		return nil, false
	}
	return o.Bps, true
}

// HasBps returns a boolean if a field has been set.
func (o *MayanameSubaffiliate) HasBps() bool {
	if o != nil && o.Bps != nil {
		return true
	}

	return false
}

// SetBps gets a reference to the given int64 and assigns it to the Bps field.
func (o *MayanameSubaffiliate) SetBps(v int64) {
	o.Bps = &v
}

func (o MayanameSubaffiliate) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Bps != nil {
		toSerialize["bps"] = o.Bps
	}
	return json.Marshal(toSerialize)
}

type NullableMayanameSubaffiliate struct {
	value *MayanameSubaffiliate
	isSet bool
}

func (v NullableMayanameSubaffiliate) Get() *MayanameSubaffiliate {
	return v.value
}

func (v *NullableMayanameSubaffiliate) Set(val *MayanameSubaffiliate) {
	v.value = val
	v.isSet = true
}

func (v NullableMayanameSubaffiliate) IsSet() bool {
	return v.isSet
}

func (v *NullableMayanameSubaffiliate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMayanameSubaffiliate(val *MayanameSubaffiliate) *NullableMayanameSubaffiliate {
	return &NullableMayanameSubaffiliate{value: val, isSet: true}
}

func (v NullableMayanameSubaffiliate) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMayanameSubaffiliate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


